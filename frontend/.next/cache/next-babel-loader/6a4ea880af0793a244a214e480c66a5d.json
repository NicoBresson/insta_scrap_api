{"ast":null,"code":"var _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport NumberFormat from 'react-number-format';\n\nconst Table = ({\n  scrapes\n}) => {\n  return __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 4\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 6\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }\n  }, __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, \"Index\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }, \"InstagramId\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }, \"Name\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, \"Number of followers\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }, \"This profile is following Dreister\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 6\n    }\n  }, scrapes.map((scrape, index) => __jsx(\"tr\", {\n    key: scrape.instagramId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }, __jsx(\"td\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, index + 1), __jsx(\"td\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, scrape.instagramId), __jsx(\"td\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, scrape.name), __jsx(\"td\", {\n    style: {\n      textAlign: 'right',\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, __jsx(NumberFormat, {\n    value: scrape.nbFollowers,\n    displayType: 'text',\n    thousandSeparator: ' ',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 59\n    }\n  })), __jsx(\"td\", {\n    style: {\n      textAlign: 'right',\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, scrape.isFollowingDreister ? 'YES' : 'NO')))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Table.js"],"names":["NumberFormat","Table","scrapes","padding","map","scrape","index","instagramId","name","textAlign","nbFollowers","isFollowingDreister"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KACX;AAAI,IAAA,GAAG,EAAED,MAAM,CAACE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BG,KAAK,GAAG,CAApC,CADF,EAEE;AAAI,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,MAAM,CAACE,WAAnC,CAFF,EAGE;AAAI,IAAA,KAAK,EAAE;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,MAAM,CAACG,IAAnC,CAHF,EAIE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,OAAb;AAAsBN,MAAAA,OAAO,EAAE;AAA/B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+C,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,MAAM,CAACK,WAA5B;AAAyC,IAAA,WAAW,EAAE,MAAtD;AAA8D,IAAA,iBAAiB,EAAE,GAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/C,CAJF,EAKE;AAAI,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE,OAAb;AAAsBN,MAAAA,OAAO,EAAE;AAA/B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDE,MAAM,CAACM,mBAAP,GAA6B,KAA7B,GAAqC,IAArF,CALF,CADD,CADH,CAVF,CADF;AAwBA,CAzBD;;AA2BA,eAAeV,KAAf","sourcesContent":["import NumberFormat from 'react-number-format';\n\nconst Table = ({scrapes})=> {\n return (\n   <table>\n     <thead>\n       <tr>\n         <th style={{ padding: 5 }}>Index</th>\n         <th style={{ padding: 5 }}>InstagramId</th>\n         <th style={{ padding: 5 }}>Name</th>\n         <th style={{ padding: 5 }}>Number of followers</th>\n         <th style={{ padding: 5 }}>This profile is following Dreister</th>\n       </tr>\n     </thead>\n     <tbody>\n       {scrapes.map((scrape, index) => (\n         <tr key={scrape.instagramId}>\n           <td style={{ padding: 5 }}>{index + 1}</td>\n           <td style={{ padding: 5 }}>{scrape.instagramId}</td>\n           <td style={{ padding: 5 }}>{scrape.name}</td>\n           <td style={{ textAlign: 'right', padding: 5 }}><NumberFormat value={scrape.nbFollowers} displayType={'text'} thousandSeparator={' '} /></td>\n           <td style={{ textAlign: 'right', padding: 5 }}>{scrape.isFollowingDreister ? 'YES' : 'NO'}</td>\n         </tr>\n       ))}\n     </tbody>\n   </table>\n )\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}