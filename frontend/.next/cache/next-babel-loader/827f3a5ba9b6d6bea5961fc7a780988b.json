{"ast":null,"code":"var _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Page.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'node-fetch';\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './scrapeContext'; //custom hook!\n\nfunction useScrapes() {\n  const {\n    0: scrapes,\n    1: setScrapes\n  } = useState([{\n    instagramId: ''\n  }]);\n  const {\n    0: remainingScrapes,\n    1: setRemainingScrapes\n  } = useState(0); // Use effect accept only a function as parameter\n\n  useEffect(function () {\n    (async () => {\n      console.log('Mounting or Updating');\n      const res = await fetch('http://localhost:3000/api/top100');\n      const nbScraps = await fetch('http://localhost:3000/api/top100');\n      const data = await res.json();\n      setScrapes(data);\n      setRemainingScrapes(nbScraps);\n      console.log(nbScraps);\n    })();\n  }, []);\n  return {\n    scrapes\n  };\n}\n\nconst Page = ({\n  children\n}) => {\n  const scrapes = useScrapes();\n  return __jsx(ScrapeProvider, {\n    value: {\n      scrapes,\n      remainingScrapes\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Page.js"],"names":["fetch","useEffect","useState","ScrapeProvider","useScrapes","scrapes","setScrapes","instagramId","remainingScrapes","setRemainingScrapes","console","log","res","nbScraps","data","json","Page","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,iBAA/B,C,CAEA;;AACA,SAASC,UAAT,GAAqB;AACnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAASC;AAAT,MAAqBJ,QAAQ,CAAC,CAAC;AAACK,IAAAA,WAAW,EAAC;AAAb,GAAD,CAAD,CAAnC;AACA,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CP,QAAQ,CAAC,CAAD,CAAxD,CAFmB,CAInB;;AACAD,EAAAA,SAAS,CAAC,YAAW;AACnB,KAAC,YAAY;AACXS,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC,kCAAD,CAAvB;AACA,YAAMa,QAAQ,GAAG,MAAMb,KAAK,CAAC,kCAAD,CAA5B;AACA,YAAMc,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAT,MAAAA,UAAU,CAACQ,IAAD,CAAV;AACAL,MAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACD,KARD;AASD,GAVQ,EAUP,EAVO,CAAT;AAWA,SAAO;AAACR,IAAAA;AAAD,GAAP;AACD;;AAED,MAAMW,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAMZ,OAAO,GAAGD,UAAU,EAA1B;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EACnB;AAAEC,MAAAA,OAAF;AAAWG,MAAAA;AAAX,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QADH,CAHF,CADF;AASD,CAXD;;AAaA,eAAeD,IAAf","sourcesContent":["import fetch from 'node-fetch';\nimport {useEffect, useState} from 'react';\nimport { ScrapeProvider } from './scrapeContext';\n\n//custom hook!\nfunction useScrapes(){\n  const [scrapes,setScrapes]=useState([{instagramId:''}])\n  const [remainingScrapes, setRemainingScrapes] = useState(0)\n\n  // Use effect accept only a function as parameter\n  useEffect(function() {\n    (async () => {\n      console.log('Mounting or Updating')\n      const res = await fetch('http://localhost:3000/api/top100')\n      const nbScraps = await fetch('http://localhost:3000/api/top100')\n      const data = await res.json()\n      setScrapes(data)\n      setRemainingScrapes(nbScraps)\n      console.log(nbScraps)\n    })()\n  },[])\n  return {scrapes}\n}\n\nconst Page = ({ children }) => {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider value={\n      { scrapes, remainingScrapes }\n    }>\n      <div className=\"page\">\n        {children}\n      </div>\n    </ScrapeProvider>\n  );\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}