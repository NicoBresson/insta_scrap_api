{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Page.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './scrapeContext'; //custom hook!\n\nfunction useScrapes() {\n  var _useState = useState({}),\n      scrapes = _useState[0],\n      setScrapes = _useState[1];\n\n  useEffect(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Mounting or Updating');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/profiles'));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context.sent;\n            console.log(data);\n            setScrapes(data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }(), []);\n  return scrapes;\n}\n\nvar Page = function Page(_ref) {\n  var children = _ref.children;\n  var scrapes = useScrapes();\n  return __jsx(ScrapeProvider, {\n    value: {\n      scrapes: scrapes\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Page.js"],"names":["useEffect","useState","ScrapeProvider","useScrapes","scrapes","setScrapes","console","log","fetch","res","json","data","Page","children"],"mappings":";;;;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,iBAA/B,C,CAEA;;AACA,SAASC,UAAT,GAAqB;AAAA,kBACQF,QAAQ,CAAC,EAAD,CADhB;AAAA,MACZG,OADY;AAAA,MACJC,UADI;;AAEnBL,EAAAA,SAAS,CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACTM,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADS;AAAA,6CAESC,KAAK,CAAC,oCAAD,CAFd;;AAAA;AAEHC,YAAAA,GAFG;AAAA;AAAA,6CAGUA,GAAG,CAACC,IAAJ,EAHV;;AAAA;AAGHC,YAAAA,IAHG;AAITL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAN,YAAAA,UAAU,CAACM,IAAD,CAAV;;AALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAAD,EAMJ,EANI,CAAT;AAOA,SAAOP,OAAP;AACD;;AAED,IAAMQ,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7B,MAAMT,OAAO,GAAGD,UAAU,EAA1B;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AACrBC,MAAAA,OAAO,EAAPA;AADqB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QADH,CAHF,CADF;AASD,CAXD;;AAaA,eAAeD,IAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport { ScrapeProvider } from './scrapeContext';\n\n//custom hook!\nfunction useScrapes(){\n  const [scrapes,setScrapes]=useState({})\n  useEffect((async()=>{\n    console.log('Mounting or Updating')\n    const res = await fetch('http://localhost:3000/api/profiles')\n    const data = await res.json()\n    console.log(data)\n    setScrapes(data)\n  })(),[])\n  return scrapes\n}\n\nconst Page = ({ children }) => {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider value={{\n      scrapes,\n    }}>\n      <div className=\"page\">\n        {children}\n      </div>\n    </ScrapeProvider>\n  );\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}