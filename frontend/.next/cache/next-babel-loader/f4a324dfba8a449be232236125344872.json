{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Page.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'node-fetch';\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './scrapeContext'; //custom hook!\n\nfunction useScrapes() {\n  var _useState = useState([{\n    instagramId: 'test'\n  }]),\n      scrapes = _useState[0],\n      setScrapes = _useState[1]; // Use effect accept only a function as parameter\n\n\n  useEffect(function () {\n    (function _callee() {\n      var res, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Mounting or Updating');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/profiles'));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              data = _context.sent;\n              setScrapes(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return scrapes;\n}\n\nvar Page = function Page(_ref) {\n  var children = _ref.children;\n  var scrapes = useScrapes();\n  return __jsx(ScrapeProvider, {\n    value: {\n      scrapes: scrapes\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Page.js"],"names":["fetch","useEffect","useState","ScrapeProvider","useScrapes","instagramId","scrapes","setScrapes","console","log","res","json","data","Page","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,iBAA/B,C,CAEA;;AACA,SAASC,UAAT,GAAqB;AAAA,kBACQF,QAAQ,CAAC,CAAC;AAACG,IAAAA,WAAW,EAAC;AAAb,GAAD,CAAD,CADhB;AAAA,MACZC,OADY;AAAA,MACJC,UADI,iBAGnB;;;AACAN,EAAAA,SAAS,CAAC,YAAW;AACnB,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADD;AAAA,+CAEmBT,KAAK,CAAC,oCAAD,CAFxB;;AAAA;AAEOU,cAAAA,GAFP;AAAA;AAAA,+CAGoBA,GAAG,CAACC,IAAJ,EAHpB;;AAAA;AAGOC,cAAAA,IAHP;AAICL,cAAAA,UAAU,CAACK,IAAD,CAAV;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMD,GAPQ,EAOP,EAPO,CAAT;AAQA,SAAON,OAAP;AACD;;AAED,IAAMO,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7B,MAAMR,OAAO,GAAGF,UAAU,EAA1B;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EACnB;AAACE,MAAAA,OAAO,EAAPA;AAAD,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,QADH,CAHF,CADF;AASD,CAXD;;AAaA,eAAeD,IAAf","sourcesContent":["import fetch from 'node-fetch';\nimport {useEffect, useState} from 'react';\nimport { ScrapeProvider } from './scrapeContext';\n\n//custom hook!\nfunction useScrapes(){\n  const [scrapes,setScrapes]=useState([{instagramId:'test'}])\n\n  // Use effect accept only a function as parameter\n  useEffect(function() {\n    (async () => {\n      console.log('Mounting or Updating')\n      const res = await fetch('http://localhost:3000/api/profiles')\n      const data = await res.json()\n      setScrapes(data)\n    })()\n  },[])\n  return scrapes\n}\n\nconst Page = ({ children }) => {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider value={\n      {scrapes}\n    }>\n      <div className=\"page\">\n        {children}\n      </div>\n    </ScrapeProvider>\n  );\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}