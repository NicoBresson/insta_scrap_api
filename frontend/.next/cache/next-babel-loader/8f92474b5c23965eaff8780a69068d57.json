{"ast":null,"code":"var _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Chart.js\";\nvar __jsx = React.createElement;\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default class Example extends PureComponent {\n  render() {\n    const maxFollowers = 50000;\n    const minFollowers = 5000;\n    const dataFiltered = this.props.scrapes.filter(element => element.nbFollowers < maxFollowers && element.nbFollowers > minFollowers);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Intersting follower chart(inferior to \", maxFollowers, \" and superior to \", minFollowers, \")\"), __jsx(BarChart, {\n      width: 1000,\n      height: 300,\n      data: dataFiltered,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, __jsx(XAxis, {\n      dataKey: \"instagramId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), __jsx(YAxis, {\n      domain: ['dataMin', 'dataMax'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), __jsx(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), __jsx(Bar, {\n      type: \"monotone\",\n      dataKey: \"nbFollowers\",\n      fill: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Chart.js"],"names":["React","PureComponent","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Example","render","maxFollowers","minFollowers","dataFiltered","props","scrapes","filter","element","nbFollowers","top","right","left","bottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SACEC,QADF,EACYC,GADZ,EACiBC,KADjB,EACwBC,KADxB,EAC+BC,aAD/B,EAC8CC,OAD9C,EACuDC,MADvD,QAEO,UAFP;AAKA,eAAe,MAAMC,OAAN,SAAsBR,aAAtB,CAAoC;AAGjDS,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,KAArB;AACA,UAAMC,YAAY,GAAG,IAArB;AACA,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0BC,OAAO,IAAIA,OAAO,CAACC,WAAR,GAAsBP,YAAtB,IAAsCM,OAAO,CAACC,WAAR,GAAsBN,YAAjG,CAArB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA2CD,YAA3C,uBAA0EC,YAA1E,MADF,EAEA,MAAC,QAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,IAAI,EAAEC,YAHR;AAIE,MAAA,MAAM,EAAE;AACNM,QAAAA,GAAG,EAAE,CADC;AACEC,QAAAA,KAAK,EAAE,EADT;AACaC,QAAAA,IAAI,EAAE,EADnB;AACuBC,QAAAA,MAAM,EAAE;AAD/B,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,MAAC,KAAD;AAAO,MAAA,MAAM,EAAE,CAAC,SAAD,EAAW,SAAX,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAC,UAAV;AAAqB,MAAA,OAAO,EAAC,aAA7B;AAA2C,MAAA,IAAI,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAFA,CADF;AAmBD;;AA1BgD","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nexport default class Example extends PureComponent {\n\n\n  render() {\n    const maxFollowers = 50000\n    const minFollowers = 5000\n    const dataFiltered = this.props.scrapes.filter(element => element.nbFollowers < maxFollowers && element.nbFollowers > minFollowers)\n    return (\n      <div>\n        <h4>Intersting follower chart(inferior to {maxFollowers} and superior to {minFollowers})</h4>\n      <BarChart\n        width={1000}\n        height={300}\n        data={dataFiltered}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <XAxis dataKey='instagramId' />\n        <YAxis domain={['dataMin','dataMax']}/>\n        <Tooltip />\n        <Legend />\n        <Bar type=\"monotone\" dataKey='nbFollowers' fill=\"#8884d8\"/>\n      </BarChart>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}