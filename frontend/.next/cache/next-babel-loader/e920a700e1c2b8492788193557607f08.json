{"ast":null,"code":"var _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Data.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { ScrapeContext } from './scrapeContext';\n\nconst Data = () => {\n  const {\n    scrapes,\n    remainingScrapes\n  } = useContext(ScrapeContext);\n  console.log(remainingScrapes);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"Top 100 Profiles connected to Dreister (Followers + Following) sorted by number of Followers\"), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, remainingScrapes, \" remaining\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Index\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"InstagramId\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"Name\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Number of followers\"), __jsx(\"th\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"This profile is following Dreister\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, scrapes.map((scrape, index) => __jsx(\"tr\", {\n    key: scrape.instagramId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"td\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, index + 1), __jsx(\"td\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, scrape.instagramId), __jsx(\"td\", {\n    style: {\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, scrape.name), __jsx(\"td\", {\n    style: {\n      textAlign: 'right',\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(NumberFormat, {\n    value: scrape.nbFollowers,\n    displayType: 'text',\n    thousandSeparator: ' ',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 60\n    }\n  })), __jsx(\"td\", {\n    style: {\n      textAlign: 'right',\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, scrape.isFollowingDreister ? 'YES' : 'NO'))))));\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Data.js"],"names":["useContext","NumberFormat","ScrapeContext","Data","scrapes","remainingScrapes","console","log","padding","map","scrape","index","instagramId","name","textAlign","nbFollowers","isFollowingDreister"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { ScrapeContext } from './scrapeContext';\n\nconst Data = () => {\n  const { scrapes, remainingScrapes } = useContext(ScrapeContext)\n  console.log(remainingScrapes)\n  return (<div>\n    <h2>Top 100 Profiles connected to Dreister (Followers + Following) sorted by number of Followers</h2>\n    <h4>{remainingScrapes} remaining</h4>\n    <table>\n      <thead>\n        <tr>\n          <th style={{ padding: 5 }}>Index</th>\n          <th style={{ padding: 5 }}>InstagramId</th>\n          <th style={{ padding: 5 }}>Name</th>\n          <th style={{ padding: 5 }}>Number of followers</th>\n          <th style={{ padding: 5 }}>This profile is following Dreister</th>\n        </tr>\n      </thead>\n      <tbody>\n        {scrapes.map((scrape, index) => (\n          <tr key={scrape.instagramId}>\n            <td style={{ padding: 5 }}>{index + 1}</td>\n            <td style={{ padding: 5 }}>{scrape.instagramId}</td>\n            <td style={{ padding: 5 }}>{scrape.name}</td>\n            <td style={{ textAlign: 'right', padding: 5 }}><NumberFormat value={scrape.nbFollowers} displayType={'text'} thousandSeparator={' '} /></td>\n            <td style={{ textAlign: 'right', padding: 5 }}>{scrape.isFollowingDreister ? 'YES' : 'NO'}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>)\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}