{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nico/Code/dreister_api/frontend/components/Page.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'node-fetch';\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './scrapeContext'; //custom hook!\n\nfunction useRemainingScrapes() {\n  var _useState = useState(0),\n      remainingScrapes = _useState[0],\n      setRemainingScrapes = _useState[1]; // Use effect accept only a function as parameter\n\n\n  useEffect(function () {\n    (function _callee() {\n      var res, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/ramaining-scrapes'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              setRemainingScrapes(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return remainingScrapes;\n} //custom hook!\n\n\nfunction useScrapes() {\n  var _useState2 = useState([{\n    instagramId: ''\n  }]),\n      scrapes = _useState2[0],\n      setScrapes = _useState2[1]; // Use effect accept only a function as parameter\n\n\n  useEffect(function () {\n    (function _callee2() {\n      var res, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Mounting or Updating');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/top100'));\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              data = _context2.sent;\n              setScrapes(data);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return scrapes;\n}\n\nvar Page = function Page(_ref) {\n  var children = _ref.children;\n  var scrapes = useScrapes();\n  var remainingScrapes = useRemainingScrapes();\n  return __jsx(ScrapeProvider, {\n    value: {\n      scrapes: scrapes,\n      remainingScrapes: remainingScrapes\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/nico/Code/dreister_api/frontend/components/Page.js"],"names":["fetch","useEffect","useState","ScrapeProvider","useRemainingScrapes","remainingScrapes","setRemainingScrapes","res","json","data","useScrapes","instagramId","scrapes","setScrapes","console","log","Page","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B,C,CAEA;;AACA,SAASC,mBAAT,GAA+B;AAAA,kBACmBF,QAAQ,CAAC,CAAD,CAD3B;AAAA,MACtBG,gBADsB;AAAA,MACJC,mBADI,iBAE7B;;;AACAL,EAAAA,SAAS,CAAC,YAAY;AACpB,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACmBD,KAAK,CAAC,6CAAD,CADxB;;AAAA;AACOO,cAAAA,GADP;AAAA;AAAA,+CAEoBA,GAAG,CAACC,IAAJ,EAFpB;;AAAA;AAEOC,cAAAA,IAFP;AAGCH,cAAAA,mBAAmB,CAACG,IAAD,CAAnB;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKD,GANQ,EAMN,EANM,CAAT;AAOA,SAAOJ,gBAAP;AACD,C,CAED;;;AAEA,SAASK,UAAT,GAAsB;AAAA,mBACUR,QAAQ,CAAC,CAAC;AAAES,IAAAA,WAAW,EAAE;AAAf,GAAD,CAAD,CADlB;AAAA,MACbC,OADa;AAAA,MACJC,UADI,kBAGpB;;;AACAZ,EAAAA,SAAS,CAAC,YAAY;AACpB,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCa,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADD;AAAA,+CAEmBf,KAAK,CAAC,kCAAD,CAFxB;;AAAA;AAEOO,cAAAA,GAFP;AAAA;AAAA,+CAGoBA,GAAG,CAACC,IAAJ,EAHpB;;AAAA;AAGOC,cAAAA,IAHP;AAICI,cAAAA,UAAU,CAACJ,IAAD,CAAV;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOG,OAAP;AACD;;AAED,IAAMI,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7B,MAAML,OAAO,GAAGF,UAAU,EAA1B;AACA,MAAML,gBAAgB,GAAGD,mBAAmB,EAA5C;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EACnB;AAAEQ,MAAAA,OAAO,EAAPA,OAAF;AAAWP,MAAAA,gBAAgB,EAAhBA;AAAX,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,QADH,CAHF,CADF;AASD,CAZD;;AAcA,eAAeD,IAAf","sourcesContent":["import fetch from 'node-fetch';\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './scrapeContext';\n\n//custom hook!\nfunction useRemainingScrapes() {\n  const [remainingScrapes, setRemainingScrapes] = useState(0)\n  // Use effect accept only a function as parameter\n  useEffect(function () {\n    (async () => {\n      const res = await fetch('http://localhost:3000/api/ramaining-scrapes')\n      const data = await res.json()\n      setRemainingScrapes(data)\n    })()\n  }, [])\n  return remainingScrapes\n}\n\n//custom hook!\n\nfunction useScrapes() {\n  const [scrapes, setScrapes] = useState([{ instagramId: '' }])\n\n  // Use effect accept only a function as parameter\n  useEffect(function () {\n    (async () => {\n      console.log('Mounting or Updating')\n      const res = await fetch('http://localhost:3000/api/top100')\n      const data = await res.json()\n      setScrapes(data)\n    })()\n  }, [])\n  return scrapes\n}\n\nconst Page = ({ children }) => {\n  const scrapes = useScrapes();\n  const remainingScrapes = useRemainingScrapes();\n  return (\n    <ScrapeProvider value={\n      { scrapes, remainingScrapes }\n    }>\n      <div className=\"page\">\n        {children}\n      </div>\n    </ScrapeProvider>\n  );\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}