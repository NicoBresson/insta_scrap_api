{"version":3,"file":"static/webpack/static/development/pages/index.js.50c918c129cd48c2fb45.hot-update.js","sources":["webpack:///./components/Page.js"],"sourcesContent":["import fetch from 'node-fetch';\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './scrapeContext';\n\n//custom hook!\nfunction useRemainingScrapes() {\n  const [remainingScrapes, setRemainingScrapes] = useState(0)\n  // Use effect accept only a function as parameter\n  useEffect(function () {\n    (async () => {\n      const res = await fetch('http://localhost:3000/api/ramaining-scrapes')\n      const data = await res.json()\n      setRemainingScrapes(data)\n    })()\n  }, [])\n  return remainingScrapes\n}\n\n//custom hook!\n\nfunction useScrapes() {\n  const [scrapes, setScrapes] = useState([{ instagramId: '' }])\n\n  // fetch\n  async function fetchScrapes (){\n    const res = await fetch('http://localhost:3000/api/top100')\n    const data = await res.json()\n    setScrapes(data)\n  }\n\n  // Use effect accept only a function as parameter\n  useEffect(() => {\n      fetchScrapes()\n  }, [])\n  return {scrapes,fetchScrapes}\n}\n\nconst Page = ({ children }) => {\n  const scrapes = useScrapes();\n  const remainingScrapes = useRemainingScrapes();\n  return (\n    <ScrapeProvider value={\n      { scrapes, fetchScrapes, remainingScrapes }\n    }>\n      <div className=\"page\">\n        {children}\n      </div>\n    </ScrapeProvider>\n  );\n}\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}